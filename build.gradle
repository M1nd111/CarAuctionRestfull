plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.5'
    id "io.freefair.lombok" version "8.6"
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'org.cyclonedx.bom' version '1.7.2'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    querydsl.extendsFrom implementation, compileOnly, runtimeOnly
}

repositories {
    mavenCentral()
}

cyclonedxBom {
    includeConfigs = ["runtimeClasspath"]
    skipConfigs = ["compileClasspath", "testCompileClasspath"]
    projectType = "application"
    schemaVersion = "1.4"
    destination = file("build/reports")
    outputName = "CycloneDX-Sbom"
    outputFormat = "all"
    includeBomSerialNumber = true
    componentVersion = "2.0.0"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'com.mysql:mysql-connector-j'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
    implementation 'com.querydsl:querydsl-core'
    implementation 'com.querydsl:querydsl-jpa'
    annotationProcessor 'com.querydsl:querydsl-apt'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//    implementation 'org.liquibase:liquibase-core'
}

querydsl {
    jpa = true
    library = 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    querydslSourcesDir = "$projectDir/build/generated/sources/annotationProcessor/java/main"
}

initQuerydslSourcesDir.dependsOn clean

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

bootJar {
    mainClass = 'spring.ws.carrentaldirectoryweb.CarRentalDirectoryWebApplication'
}


test {
    useJUnitPlatform()
}

build.finalizedBy('cyclonedxBom')